version: "3"

volumes:
    postgres_data:
        driver: local

# networks:
#     traefik:
#         external: true
#         name: traefik
#     keycloak:
#         name: keycloak

services:
    postgres:
        container_name: postgres
        image: postgis/postgis:14-3.1-alpine
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    pgweb:
        container_name: pgweb
        image: sosedoff/pgweb:0.11.9
        ports:
            - "8081:8081"
        # links:
        #     - postgres:postgres
        environment:
            - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
        depends_on:
            - postgres
        # networks:
        #     - traefik
        # labels:
        #     - traefik.enable=true
        #     - traefik.http.routers.pgweb.rule=Host(`pgweb.${DOMAINNAME}`)

    keycloak:
        image: jboss/keycloak:15.1.0
        environment:
            DB_VENDOR: POSTGRES
            DB_ADDR: postgres
            DB_DATABASE: ${POSTGRES_DB}
            DB_USER: ${POSTGRES_USER}
            DB_SCHEMA: public
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            KEYCLOAK_USER: admin
            KEYCLOAK_PASSWORD: Pa55w0rd
            # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
            #JDBC_PARAMS: "ssl=true"
        ports:
            - 8082:8080
        depends_on:
            - postgres
        # networks:
        #     - traefik
        # labels:
        #     - traefik.enable=true
        #     - traefik.http.routers.keycloak.rule=Host(`auth.${DOMAINNAME}`)

    graphql-engine:
        image: hasura/graphql-engine:v2.0.9
        # restart: unless-stopped
        ports:
            - "8083:8080"
        depends_on:
            - postgres
        environment:
            ## postgres database to store Hasura metadata
            HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
            ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
            PG_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
            ## enable the console served by server
            HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
            ## enable debugging mode. It is recommended to disable this in production
            HASURA_GRAPHQL_DEV_MODE: "true"
            HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
            ## uncomment next line to set an admin secret
            # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
        # labels:
        #     - "traefik.enable=true"
        #     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.entrypoints=https"
        #     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.rule=Host(`hasura.docker.so`)"
        #     - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-app.tls=true"
        #     - "traefik.http.services.${COMPOSE_PROJECT_NAME}-app.loadbalancer.server.port=8080"
        #     - "traefik.docker.network=stonehenge-network"
        # networks:
        #     - traefik
